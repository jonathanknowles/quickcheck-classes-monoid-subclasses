cabal-version:  3.0
name:           quickcheck-monoid-subclasses
version:        0.0.0.0
bug-reports:    https://github.com/jonathanknowles/quickcheck-monoid-subclasses/issues
license:        Apache-2.0
license-file:   LICENSE
author:         Jonathan Knowles
maintainer:     mail@jonathanknowles.net
copyright:      2022 Jonathan Knowles
category:       Testing
synopsis:       Testing monoid subclass instances with QuickCheck
description:

  = Overview

  This library provides:

  * [QuickCheck](https://hackage.haskell.org/package/QuickCheck) support for
    testing instances of type classes defined in the
    [monoid-subclasses](https://hackage.haskell.org/package/monoid-subclasses)
    library.

  * Compatibility with the
    [quickcheck-classes](https://hackage.haskell.org/package/quickcheck-classes)
    library.

  * Reusable properties for type class laws, in the form of
    [Laws](https://hackage.haskell.org/package/quickcheck-classes/docs/Test-QuickCheck-Classes.html#t:Laws)
    definitions.

  = Usage

  In general, usage is identical to that of the
  [quickcheck-classes](https://hackage.haskell.org/package/quickcheck-classes)
  library.

  == Testing laws for a single type class instance

  To test that the laws of a particular class hold for a particular type, use
  the
  [lawsCheck](https://hackage.haskell.org/package/quickcheck-classes/docs/Test-QuickCheck-Classes.html#t:lawsCheck)
  function with the
  [Laws](https://hackage.haskell.org/package/quickcheck-classes/docs/Test-QuickCheck-Classes.html#t:Laws)
  definition for the class you wish to test.

  === Example

  To test that the
  [Monus](https://hackage.haskell.org/package/monoid-subclasses/docs/Data-Monoid-Monus.html#t:Monus)
  laws hold for the
  [Sum](https://hackage.haskell.org/package/base/docs/Data-Monoid.html#t:Sum)
  [Natural](https://hackage.haskell.org/package/base/docs/Numeric-Natural.html#t:Natural)
  type:

  @
  import Data.Monoid (Sum)
  import Data.Proxy (Proxy (Proxy))
  import Numeric.Natural (Natural)
  import Test.QuickCheck.Classes (lawsCheck)
  import Test.QuickCheck.Classes.Monoid.Monus (monusLaws)
  @

  @
  lawsCheck (monusLaws (Proxy :: Proxy (Sum Natural)))
  @

  If all tests pass, you should see output similar to:

  @
  Monus: axiom1 +++ OK, passed 100 tests.
  Monus: axiom2 +++ OK, passed 100 tests.
  Monus: axiom3 +++ OK, passed 100 tests.
  Monus: axiom4 +++ OK, passed 100 tests.
  Monus: stripPrefixOverlap +++ OK, passed 100 tests.
  Monus: stripSuffixOverlap +++ OK, passed 100 tests.
  @

  == Testing laws for multiple type classes

  To test that the laws of __multiple__ classes hold for a particular type, use
  the
  [lawsCheckOne](https://hackage.haskell.org/package/quickcheck-classes/docs/Test-QuickCheck-Classes.html#t:lawsCheckOne)
  function with the
  [Laws](https://hackage.haskell.org/package/quickcheck-classes/docs/Test-QuickCheck-Classes.html#t:Laws)
  definitions for the classes you wish to test.

  === Example

  To test that the
  [Sum](https://hackage.haskell.org/package/base/docs/Data-Monoid.html#t:Sum)
  [Natural](https://hackage.haskell.org/package/base/docs/Numeric-Natural.html#t:Natural)
  type satisfies the laws of
  [Semigroup](https://hackage.haskell.org/package/base/docs/Data-Semigroup.html#t:Semigroup)
  and its subclasses:

  @
  import Data.Monoid (Sum)
  import Data.Proxy (Proxy (Proxy))
  import Numeric.Natural (Natural)
  import Test.QuickCheck.Classes
  import Test.QuickCheck.Classes.Monoid.GCD
  import Test.QuickCheck.Classes.Monoid.Monus
  import Test.QuickCheck.Classes.Monoid.Null
  import Test.QuickCheck.Classes.Semigroup.Cancellative
  @

  @
  lawsCheckOne (Proxy :: Proxy (Sum Natural))
      [ cancellativeGCDMonoidLaws
      , cancellativeLaws
      , commutativeLaws
      , gcdMonoidLaws
      , leftCancellativeLaws
      , leftGCDMonoidLaws
      , leftReductiveLaws
      , monoidLaws
      , monoidNullLaws
      , monusLaws
      , overlappingGCDMonoidLaws
      , positiveMonoidLaws
      , reductiveLaws
      , rightCancellativeLaws
      , rightGCDMonoidLaws
      , rightReductiveLaws
      , semigroupLaws
      ]
  @

  = Subclasses and superclasses

  Each of the
  [Laws](https://hackage.haskell.org/package/quickcheck-classes/docs/Test-QuickCheck-Classes.html#t:Laws)
  definitions provided by this library corresponds to exactly __one__ type
  class, and includes __just__ the laws for that class. Laws for subclasses and
  superclasses are __not__ automatically included. Therefore, you'll need to
  __explicitly__ test the laws of every single class you wish to cover.

  = Coverage

  This library includes __coverage checks__ to ensure that important cases are
  covered, and to reduce the probability of test passes that are false
  positives.  These coverage checks are performed automatically.

  To increase coverage of interesting and important cases, this library also
  checks that laws hold for __combinations__ of generated arbitrary values.

  === Example

  Suppose we are testing the following law:

  @
  isPrefixOf a b == isJust (stripPrefix a b)
  @

  This library will also test that the following __derived__ laws hold:

  @
  isPrefixOf a (a <> a) == isJust (stripPrefix a (a <> a))
  isPrefixOf a (a <> b) == isJust (stripPrefix a (a <> b))
  isPrefixOf a (b <> a) == isJust (stripPrefix a (b <> a))
  @

extra-doc-files:
    CHANGELOG.md
    README.md

common dependency-base
    build-depends:base                      >= 4.14.3.0     && < 4.18
common dependency-bytestring
    build-depends:bytestring                >= 0.10.12.0    && < 0.12
common dependency-commutative-semigroups
    build-depends:commutative-semigroups    >= 0.1.0.0      && < 0.2
common dependency-containers
    build-depends:containers                >= 0.6.5.1      && < 0.7
common dependency-hspec
    build-depends:hspec                     >= 2.10.7       && < 2.11
common dependency-monoid-subclasses
    build-depends:monoid-subclasses         >= 1.2.1        && < 1.3
common dependency-pretty-show
    build-depends:pretty-show               >= 1.10         && < 1.11
common dependency-QuickCheck
    build-depends:QuickCheck                >= 2.14.2       && < 2.15
common dependency-quickcheck-classes
    build-depends:quickcheck-classes        >= 0.6.5.0      && < 0.7
common dependency-quickcheck-instances
    build-depends:quickcheck-instances      >= 0.3.28       && < 0.4
common dependency-semigroupoids
    build-depends:semigroupoids             >= 5.3.7        && < 5.4
common dependency-text
    build-depends:text                      >= 1.2.4.1      && < 2.1
common dependency-vector
    build-depends:vector                    >= 0.13.0.0     && < 0.14

common extensions
    default-extensions:
        ConstraintKinds
        DataKinds
        DerivingStrategies
        FlexibleContexts
        FlexibleInstances
        GeneralizedNewtypeDeriving
        LambdaCase
        PolyKinds
        ScopedTypeVariables
        TypeApplications
        ViewPatterns

source-repository head
    type: git
    location: https://github.com/jonathanknowles/quickcheck-monoid-subclasses

library
    import:
      , dependency-base
      , dependency-monoid-subclasses
      , dependency-QuickCheck
      , dependency-quickcheck-classes
      , extensions
    build-depends:
      , quickcheck-monoid-subclasses:internal
    default-language:
        Haskell2010
    hs-source-dirs:
        src/public
    exposed-modules:
        Test.QuickCheck.Classes.Monoid.GCD
        Test.QuickCheck.Classes.Monoid.Monus
        Test.QuickCheck.Classes.Monoid.Null
        Test.QuickCheck.Classes.Semigroup.Cancellative

library internal
    import:
      , dependency-base
      , dependency-pretty-show
      , dependency-QuickCheck
      , dependency-semigroupoids
      , extensions
    default-language:
        Haskell2010
    hs-source-dirs:
        src/internal
    exposed-modules:
        Internal
        Internal.Semigroup.Eq
        Internal.Semigroup.Tuple

library prelude
    import:
      , dependency-base
      , dependency-containers
      , dependency-monoid-subclasses
      , dependency-QuickCheck
      , dependency-quickcheck-classes
      , dependency-quickcheck-instances
      , extensions
    build-depends:
      , quickcheck-monoid-subclasses
      , quickcheck-monoid-subclasses:internal
    default-language:
        Haskell2010
    hs-source-dirs:
        src/prelude
    exposed-modules:
        Internal.Prelude

test-suite test
    import:
      , dependency-base
      , dependency-bytestring
      , dependency-commutative-semigroups
      , dependency-containers
      , dependency-hspec
      , dependency-monoid-subclasses
      , dependency-QuickCheck
      , dependency-quickcheck-classes
      , dependency-quickcheck-instances
      , dependency-text
      , dependency-vector
      , extensions
    build-depends:
      , quickcheck-monoid-subclasses
    default-language:
        Haskell2010
    ghc-options:
        -threaded -with-rtsopts=-N
    main-is:
        Spec.hs
    hs-source-dirs:
        src/test
    other-modules:
        ClassSpec
        SpecHook
        Test.Hspec.Laws
    type:
        exitcode-stdio-1.0
    build-tool-depends:
        hspec-discover:hspec-discover == 2.*
